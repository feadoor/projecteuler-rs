initSidebarItems({"fn":[["mod_add","Calculate a + b with respect to the given modulus."],["mod_exp","Calculate `base ^ exp` with respect to the given modulus."],["mod_inverse","Calculates the inverse of `a` with respect to modulus `m`, if it exists."],["mod_mul","Calcuate a * b with respect to the given modulus, without overflowing for large moduli. Uses a repeated-doubling algorithm, also known as Russian Peasant multiplication."],["mod_sub","Calculate a - b with respect to the given modulus."]],"macro":[["define_modulus","A utility macro used to easily define a struct which implements `Modulus`"]],"struct":[["FixedModular",""]],"trait":[["Modulus","Until const-generics are available, use types implementing this trait as a stand-in for an associated const on the `FixedModular` struct."]]});