(function() {var implementors = {};
implementors["continued_fractions"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"continued_fractions/struct.PeriodicContinuedFractionIterator.html\" title=\"struct continued_fractions::PeriodicContinuedFractionIterator\">PeriodicContinuedFractionIterator</a>&lt;'a&gt;","synthetic":false,"types":["continued_fractions::PeriodicContinuedFractionIterator"]},{"text":"impl&lt;I:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u64.html\">u64</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"continued_fractions/struct.ContinuedFractionConvergents.html\" title=\"struct continued_fractions::ContinuedFractionConvergents\">ContinuedFractionConvergents</a>&lt;I&gt;","synthetic":false,"types":["continued_fractions::ContinuedFractionConvergents"]}];
implementors["number_theory"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"numeric_traits/trait.Algebraic.html\" title=\"trait numeric_traits::Algebraic\">Algebraic</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"number_theory/struct.PartitionNumbersIterator.html\" title=\"struct number_theory::PartitionNumbersIterator\">PartitionNumbersIterator</a>&lt;T&gt;","synthetic":false,"types":["number_theory::partitions::PartitionNumbersIterator"]},{"text":"impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"number_theory/struct.PythagTripleIterator.html\" title=\"struct number_theory::PythagTripleIterator\">PythagTripleIterator</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"type\" href=\"number_theory/type.PythagTriple.html\" title=\"type number_theory::PythagTriple\">PythagTriple</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>,&nbsp;</span>","synthetic":false,"types":["number_theory::pythagorean_triples::PythagTripleIterator"]}];
implementors["primesieve"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"primesieve/struct.SieveIterator.html\" title=\"struct primesieve::SieveIterator\">SieveIterator</a>&lt;'a&gt;","synthetic":false,"types":["primesieve::sieve::SieveIterator"]}];
implementors["problem002"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem002/struct.Fibonacci.html\" title=\"struct problem002::Fibonacci\">Fibonacci</a>","synthetic":false,"types":["problem002::Fibonacci"]}];
implementors["problem041"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem041/struct.PandigitalIterator.html\" title=\"struct problem041::PandigitalIterator\">PandigitalIterator</a>","synthetic":false,"types":["problem041::PandigitalIterator"]}];
implementors["problem053"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem053/struct.BinomialCoefficientsWithNumerator.html\" title=\"struct problem053::BinomialCoefficientsWithNumerator\">BinomialCoefficientsWithNumerator</a>","synthetic":false,"types":["problem053::BinomialCoefficientsWithNumerator"]}];
implementors["problem103"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem103/struct.SpecialSumSetIterator.html\" title=\"struct problem103::SpecialSumSetIterator\">SpecialSumSetIterator</a>","synthetic":false,"types":["problem103::SpecialSumSetIterator"]}];
implementors["problem104"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem104/struct.FibonacciIterator.html\" title=\"struct problem104::FibonacciIterator\">FibonacciIterator</a>","synthetic":false,"types":["problem104::FibonacciIterator"]}];
implementors["problem114"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem114/struct.BricksRecurrenceIterator.html\" title=\"struct problem114::BricksRecurrenceIterator\">BricksRecurrenceIterator</a>","synthetic":false,"types":["problem114::BricksRecurrenceIterator"]}];
implementors["problem115"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem115/struct.BricksRecurrenceIterator.html\" title=\"struct problem115::BricksRecurrenceIterator\">BricksRecurrenceIterator</a>","synthetic":false,"types":["problem115::BricksRecurrenceIterator"]}];
implementors["problem116"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem116/struct.BricksRecurrenceIterator.html\" title=\"struct problem116::BricksRecurrenceIterator\">BricksRecurrenceIterator</a>","synthetic":false,"types":["problem116::BricksRecurrenceIterator"]}];
implementors["problem117"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem117/struct.BricksRecurrenceIterator.html\" title=\"struct problem117::BricksRecurrenceIterator\">BricksRecurrenceIterator</a>","synthetic":false,"types":["problem117::BricksRecurrenceIterator"]}];
implementors["problem119"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"problem119/struct.PowersIterator.html\" title=\"struct problem119::PowersIterator\">PowersIterator</a>","synthetic":false,"types":["problem119::PowersIterator"]}];
implementors["search"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"search/trait.DepthFirstTree.html\" title=\"trait search::DepthFirstTree\">DepthFirstTree</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a> for <a class=\"struct\" href=\"search/struct.DepthFirstSearcher.html\" title=\"struct search::DepthFirstSearcher\">DepthFirstSearcher</a>&lt;T&gt;","synthetic":false,"types":["search::DepthFirstSearcher"]}];

            if (window.register_implementors) {
                window.register_implementors(implementors);
            } else {
                window.pending_implementors = implementors;
            }
        })()