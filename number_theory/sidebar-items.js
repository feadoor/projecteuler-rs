initSidebarItems({"fn":[["binom","Returns the value of the binomial coefficient `m` choose `n`."],["checked_pow","Returns the value of `x` to the power of `y`, using exponentiation by repeated squaring. Returns `None` if overflow occurs."],["crt","Calculates the residue classes that satisfy each of the given constraints."],["gcd","Returns the greatest common divisor of two positive integers, computed with Euclid's algorithm."],["integer_sqrt","Returns the largest integer not greater than the square root of `n`."],["is_prime","Test if `n` is prime, using the deterministic version of the Miller-Rabin primality test."],["is_square","Returns whether or not the given number is a square."],["lcm","Returns the least common multiple of two positive integers."],["partition_numbers","An iterator over the partition numbers."],["pow","Returns the value of `x` to the power of `y`, using exponentiation by repeated squaring."],["primitive_pythag_triples","An iterator over the primitive Pythagorean triples satisfying the given condition."]],"struct":[["Constraint","A structure representing a CRT-style constraint."],["PartitionNumbersIterator","A structure capable of iterating over the partition numbers."],["PythagTripleIterator","A structure capable of iterating over all primitive Pythagorean triples."]],"type":[["PythagTriple","A type alias for a Pythagorean triple as a 3-tuple of integers."]]});